name: CI Pipeline

on:
  push: 
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.step1.outputs.test }} 
    steps:
      - name: Inject Slug/Short Variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
      - name: Build / Push Sha
        id: build_sha
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: gregnrobinson/cloud-tools:${{ env.GITHUB_SHA_SHORT }}

      - uses: actions/checkout@v2
      - name: Bump Version/Tag
        if: ${{ github.ref == 'refs/heads/main' }}
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GH_TOKEN }}

      - name: Build / Push Latest
        if: ${{ github.ref == 'refs/heads/main' }}
        id: build_latest
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: >
            gregnrobinson/cloud-tools:latest,
            gregnrobinson/cloud-tools:${{ steps.tag_version.outputs.new_tag }},
            gregnrobinson/cloud-tools:${{ env.GITHUB_SHA_SHORT }}

      - name: Create GitHub Release
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: ncipollo/release-action@v1
        with:
          omitBody: false
          omitName: false
          omitBodyDuringUpdate: false
          omitNameDuringUpdate: false
          tag: ${{ steps.tag_version.outputs.new_tag}}
          name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  update_release_draft:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # (Optional) GitHub Enterprise requires GHE_HOST variable set
      #- name: Set GHE_HOST
      #  run: |
      #    echo "GHE_HOST=${GITHUB_SERVER_URL##https:\/\/}" >> $GITHUB_ENV

      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        # with:
        #   config-name: my-config.yml
        #   disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
#  release:
#    if: ${{ github.ref == 'refs/heads/main' }}
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Inject slug/short variables
#        uses: rlespinasse/github-slug-action@v3.x
#
#      - uses: actions/checkout@v2
#      - name: Bump Version/Tag
#        id: tag_version
#        uses: mathieudutour/github-tag-action@v5.6
#        with:
#          github_token: ${{ secrets.GH_TOKEN }}
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v1 
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#
#      - name: Build and Push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          tags: >
#            gregnrobinson/cloud-tools:latest,
#            gregnrobinson/cloud-tools:${{ steps.tag_version.outputs.new_tag }},
#            gregnrobinson/cloud-tools:${{ env.GITHUB_SHA_SHORT }}
#        
#      - name: Build and Push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          tags: >
#            gregnrobinson/cloud-tools:latest,
#            gregnrobinson/cloud-tools:${{ steps.tag_version.outputs.new_tag }},
#            gregnrobinson/cloud-tools:${{ env.GITHUB_SHA_SHORT }}
#
#      - name: Create a GitHub Release
#        uses: ncipollo/release-action@v1
#        with:
#          #omitBody: true
#          omitName: false
#          #omitBodyDuringUpdate: false
#          omitNameDuringUpdate: false
#          tag: ${{ steps.tag_version.outputs.new_tag}}
#          name: ${{ steps.tag_version.outputs.new_tag }}
#          body: ${{ steps.tag_version.outputs.changelog }}