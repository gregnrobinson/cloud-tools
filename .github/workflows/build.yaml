name: ci-cloud-tools

env:
  NAME: cloud-tools
  IMAGE: gregnrobinson/cloud-tools
  WORKDIR: .

on:
  push:
    branches:
    - main
    paths:
    - 'Dockerfile'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build
      working-directory: ${{ env.WORKDIR }}
      run: >
        docker buildx build
        --platform=linux/amd64,linux/arm64
        -t ${{ env.IMAGE }}:${{ env.GITHUB_SHA_SHORT }}
        --output=type=image,push=true
        ${GITHUB_WORKSPACE}/${{ env.WORKDIR }}
    - name: Trivy Vulnerability Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.IMAGE }}:${{ env.GITHUB_SHA_SHORT }}
        format: table
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: os,library
        severity: CRITICAL
    - uses: release-drafter/release-drafter@v5
      with:
        publish: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    - id: keydb
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        owner: gregnrobinson
        repo: cloud-tools
        excludes: prerelease, draft
    - name: Build AMD64 Image
      working-directory: ${{ env.WORKDIR }}
      run: >
        docker buildx build
        --platform=linux/amd64
        -t ${{ env.IMAGE }}:${{ env.GITHUB_SHA_SHORT }}
        -t ${{ env.IMAGE }}:${{ steps.keydb.outputs.release }}
        -t ${{ env.IMAGE }}:latest
        -t ${{ env.IMAGE }}:latest_amd64
        --output=type=image,push=true
        ${GITHUB_WORKSPACE}/${{ env.WORKDIR }}
    - name: Build ARM64 Image
      working-directory: ${{ env.WORKDIR }}
      run: >
        docker buildx build
        --platform=linux/arm64
        -t ${{ env.IMAGE }}:${{ env.GITHUB_SHA_SHORT }}
        -t ${{ env.IMAGE }}:${{ steps.keydb.outputs.release }}
        -t ${{ env.IMAGE }}:latest
        -t ${{ env.IMAGE }}:latest_arm64
        --output=type=image,push=true
        ${GITHUB_WORKSPACE}/${{ env.WORKDIR }}
  slack-workflow-status:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
          # Optional Input
          channel: "#${{env.SLACK_CHANNEL}}"
          name: 'Github Workflows'
          icon_emoji: ':fire:'
          icon_url: 'https://img.icons8.com/material-outlined/96/000000/github.png'
