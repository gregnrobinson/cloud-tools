name: ci

on:
  push: 
  pull_request:
    branches: [ main ]
  workflow_dispatch:

#on:
#  schedule:
#    # SUNDAY MIDNIGHT
#    - cron: '0 0 * * *'
#  release:
#    # Only use the types keyword to narrow down the activity types that will trigger your workflow.
#    types: [published, created, edited]
#  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.step1.outputs.test }}   
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          load: true
          push: true
          tags: gregnrobinson/cloud-tools:${{ env.GITHUB_SHA_SHORT }}
        
  cd:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump Version/Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GH_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: gregnrobinson/cloud-tools:${{ steps.tag_version.outputs.new_tag }},gregnrobinson/cloud-tools:latest

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          #omitBody: true
          omitName: true
          #omitBodyDuringUpdate: false
          omitNameDuringUpdate: true
          tag: ${{ steps.tag_version.outputs.new_tag}}
          name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}